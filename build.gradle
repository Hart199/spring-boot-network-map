buildscript {
    ext.kotlin_version = '1.2.21'
    ext.corda_release_version = 'corda-3.0'
    ext.typesafe_config_version = '1.3.1'


    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.10.RELEASE'
    id 'com.palantir.docker' version '0.19.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

group = "net.corda"
version = "0.1-SNAPSHOT"

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin-noarg'
apply plugin: 'com.palantir.docker'



ext {
    spring_version = '1.5.10.RELEASE'
}

dependencies {

    // Spring boot dependencies
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_version
    compile group: 'net.corda', name: 'corda-node-api', version: corda_release_version
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: "com.typesafe", name: "config", version: typesafe_config_version

    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

docker {
    name "${project.group}/${jar.baseName}"
    copySpec.into(".").from("src/main/shell/start.sh").from(jar.archivePath).from("nodes")
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
